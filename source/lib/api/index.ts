// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import * as autoguard from "@joelek/ts-autoguard/dist/lib-shared";

export namespace Autoguard {
	export const Guards = {};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {
		"getRequest": autoguard.guards.Object.of({}, {
			"options": autoguard.guards.Intersection.of(
				autoguard.guards.Object.of({}, {
					"filename": autoguard.guards.Array.of(autoguard.guards.String)
				}),
				autoguard.api.Options
			),
			"headers": autoguard.guards.Intersection.of(
				autoguard.guards.Object.of({}, {}),
				autoguard.api.Headers
			),
			"payload": autoguard.api.Binary
		}),
		"headRequest": autoguard.guards.Object.of({}, {
			"options": autoguard.guards.Intersection.of(
				autoguard.guards.Object.of({}, {
					"filename": autoguard.guards.Array.of(autoguard.guards.String)
				}),
				autoguard.api.Options
			),
			"headers": autoguard.guards.Intersection.of(
				autoguard.guards.Object.of({}, {}),
				autoguard.api.Headers
			),
			"payload": autoguard.api.Binary
		})
	};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {
		"getRequest": autoguard.guards.Object.of({}, {
			"status": autoguard.guards.Number,
			"headers": autoguard.guards.Intersection.of(
				autoguard.guards.Object.of({}, {}),
				autoguard.api.Headers
			),
			"payload": autoguard.api.Binary
		}),
		"headRequest": autoguard.guards.Object.of({}, {
			"status": autoguard.guards.Number,
			"headers": autoguard.guards.Intersection.of(
				autoguard.guards.Object.of({}, {}),
				autoguard.api.Headers
			),
			"payload": autoguard.api.Binary
		})
	};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};

// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import * as autoguard from "@joelek/ts-autoguard/dist/lib-shared";

export const Domain = autoguard.guards.Object.of({
	"root": autoguard.guards.Union.of(
		autoguard.guards.String,
		autoguard.guards.Undefined
	),
	"key": autoguard.guards.Union.of(
		autoguard.guards.String,
		autoguard.guards.Undefined
	),
	"cert": autoguard.guards.Union.of(
		autoguard.guards.String,
		autoguard.guards.Undefined
	),
	"host": autoguard.guards.Union.of(
		autoguard.guards.String,
		autoguard.guards.Undefined
	),
	"indices": autoguard.guards.Union.of(
		autoguard.guards.Boolean,
		autoguard.guards.Undefined
	),
	"routing": autoguard.guards.Union.of(
		autoguard.guards.Boolean,
		autoguard.guards.Undefined
	)
});

export type Domain = ReturnType<typeof Domain["as"]>;

export const Options = autoguard.guards.Object.of({
	"domains": autoguard.guards.Union.of(
		autoguard.guards.Array.of(autoguard.guards.Reference.of(() => Domain)),
		autoguard.guards.Undefined
	),
	"http": autoguard.guards.Union.of(
		autoguard.guards.Number,
		autoguard.guards.Undefined
	),
	"https": autoguard.guards.Union.of(
		autoguard.guards.Number,
		autoguard.guards.Undefined
	)
});

export type Options = ReturnType<typeof Options["as"]>;

export namespace Autoguard {
	export const Guards = {
		"Domain": autoguard.guards.Reference.of(() => Domain),
		"Options": autoguard.guards.Reference.of(() => Options)
	};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};
